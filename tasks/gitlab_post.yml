---
#- name: Setup sshd not to accept password

- name: Copy GitLab configuration file
  template:
    src: "{{ gitlab_host_config_file_path if gitlab_config_check.stat.exists else 'gitlab.rb.j2' }}"
    dest: "{{ gitlab_config_file_path }}"
    owner: root
    group: root
    mode: 0644
  notify: Reconfigure and restart GitLab

- name: Replace configurations
  lineinfile:
    dest: "{{ gitlab_config_file_path }}"
    state: present
    regexp: "^\\#* *{{ item.config_prefix }}\\['{{ item.config_key }}'\\] = (.*)$"
    line: "{{ item.config_prefix }}['{{ item.config_key }}'] = {% if item.config_quote is defined and item.config_quote %}'{{ item.config_value }}'{% else %}{{ item.config_value }}{% endif %}"
  with_items: "{{ gitlab_rb_configs }}"
  when: not gitlab_config_check.stat.exists
  notify: Reconfigure and restart GitLab

- name: Copy GitLab SSL certificates
  copy:
    src: "{{ gitlab_host_config_ssl_path }}"
    dest: "{{ gitlab_config_path }}"
  when:
    - gitlab_config_ssl_check.stat.isdir is defined
    - gitlab_config_ssl_check.stat.isdir
  notify: Reconfigure and restart GitLab

- name: Create backup path
  file:
    path: "{{ gitlab_config_backup_path }}"
    state: directory
    mode: 0700
    owner: root
    group: root

- name: Setup cron to backup GitLab
  cron:
    name: Backup GitLab
    minute: '1'
    hour: '2'
    job: /opt/gitlab/bin/gitlab-backup create CRON=1

- name: Setup cron to backup GitLab configuration files
  cron:
    name: Backup GitLab configuration files
    minute: '0'
    hour: '2'
    job: umask 0077; tar cfz {{ gitlab_config_backup_path }}/$(date "+etc-gitlab-\%s.tgz") -C / etc/gitlab

- name: Setup cron to backup SSH host keys
  cron:
    name: Backup SSH host keys
    minute: '0'
    hour: '2'
    job: umask 0077; tar cfz {{ gitlab_config_backup_path }}/$(date "+etc-ssh-\%s.tgz") -C / etc/ssh
